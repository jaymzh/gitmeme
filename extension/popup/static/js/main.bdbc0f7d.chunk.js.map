{"version":3,"sources":["shared/auth/getLoggedInUser.ts","shared/auth/getGithubContext.ts","shared/auth/githubInfo.ts","shared/consts.ts","components/ListWithBadges.tsx","util/copyToClipboard.ts","shared/analytics.ts","components/Login.tsx","shared/auth/getToken.ts","components/TopTokensList.tsx","shared/auth/createAuthHeader.ts","components/Help.tsx","components/Feedback.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["getLoggedInUser","avatarNode","document","querySelector","id","getAttribute","substring","avatar","getGithubContext","url","undefined","window","location","href","idx","indexOf","length","split","getGithubInfo","_getGithubInfo","apply","this","arguments","_callee","regenerator_default","a","wrap","_context","prev","next","abrupt","Promise","resolve","chrome","storage","sync","get","results","github_token","token","github_id","github_avatar","context","loggedInUser","stop","setGithubToken","_x","_setGithubToken","_callee2","_context2","set","setGithubUserId","_x2","_x3","_setGithubUserId","_callee3","userId","avatarUrl","_context3","GITHUB_CLIENT_ID","API_ROOT_URL","commaFormat","formatNumber","ListWithBadges","props","_useState","useState","_useState2","Object","slicedToArray","copiedIdx","setCopiedIdx","react_default","createElement","className","label","items","selectInputContents","evt","node","target","nodeIdx","parseInt","text","docElem","documentElement","body","isRTL","textarea","s","prop","value","style","setProperty","yPosition","pageYOffset","scrollTop","concat","setAttribute","appendChild","focus","selectionStart","selectionEnd","succeeded","execCommand","err","parentNode","removeChild","copyToClipboard","preventDefault","map","tokenItem","key","data-idx","onClick","count","renderList","emptyMessage","renderEmpty","defaultOptions","debug","Serializable","classCallCheck","properties","JSON","stringify","toObject","str","obj","p","hasOwnProperty","push","encodeURIComponent","join","Hit","_this","possibleConstructorReturn","getPrototypeOf","call","sent","PageHit","screenName","dp","t","AnalyticsEvent","category","action","ec","ea","el","ev","analytics","Analytics","propertyId","_this2","additionalParameters","options","customDimensions","userAgent","parameters","waitOnPromise","clientId","navigator","objectSpread","_reject","local","result","Date","now","Math","floor","random","hit","send","event","name","index","_this3","then","params","toQueryString","round","method","headers","User-Agent","fetch","sendEvent","newEvent","Login","console","log","identity","interactive","callback","localRedirectUri","getRedirectURL","redirectUri","runtime","redirectRe","RegExp","parseRedirectFragment","fragment","pairs","values","forEach","pair","nameVal","handleProviderResponse","_handleProviderResponse","asyncToGenerator","mark","setAccessToken","access_token","user_id","Error","_x4","_x5","_setAccessToken","_ref","info","launchWebAuthFlow","redirectUri2","lastError","error","matches","match","getToken","onAuth","TopTokensList","user","global","tokenList","setTokenList","_useState3","_useState4","setError","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","pageContext","setPageContext","useEffect","authHeaders","userInfo","Authorization","Content-Type","tabs","query","active","currentWindow","currentTab","tabContext","search","urlParts","endsWith","resp","ok","json","catch","message","Fragment","ListWithBadges_ListWithBadges","src_components_Login","Help","react","Feedback","textAlign","marginTop","color","fontSize","letterSpacing","App","auth","setAuth","authComplete","setAuthComplete","authInfo","pageName","sendPageHit","Help_Help","TopTokensList_TopTokensList","Boolean","hostname","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bdbc0f7d.chunk.js","sourcesContent":["export default function getLoggedInUser() {\n  const avatarNode = document.querySelector(\"summary img.avatar\");\n  if (avatarNode) {\n    const userName = (avatarNode.getAttribute(\"alt\") || \"\").substring(1);\n    const avatar = avatarNode.getAttribute(\"src\");\n    return {\n      id: userName,\n      avatar\n    };\n  }\n\n  return null;\n}\n","export default function getGithubContext() {\n  const url = typeof window !== undefined ? window.location.href : \"\";\n  if (!url) {\n    return null;\n  }\n  const domain = \"github.com\";\n  const idx = url.indexOf(domain);\n  if (idx < 0) {\n    return null;\n  }\n  return url.substring(idx + domain.length + 1).split(\"/\")[0];\n}\n","import getLoggedInUser from \"./getLoggedInUser\";\nimport getGithubContext from \"./getGithubContext\";\n\ndeclare const chrome: any;\n\nexport interface GithubInfo {\n  avatar: string | null;\n  context: string | null;\n  id: string | null;\n  token: string | null;\n}\n\nexport async function getGithubInfo(): Promise<GithubInfo> {\n  return new Promise(resolve => {\n    chrome.storage.sync.get(\n      [\"github_token\", \"github_id\", \"github_avatar\"],\n      function(results: any) {\n        if (results.github_token) {\n          resolve({\n            token: results.github_token || null,\n            id: results.github_id || null,\n            avatar: results.github_avatar || null,\n            context: getGithubContext()\n          });\n        } else {\n          const loggedInUser = getLoggedInUser();\n          resolve({\n            token: null,\n            id: loggedInUser ? loggedInUser.id : null,\n            avatar: loggedInUser ? loggedInUser.avatar : null,\n            context: getGithubContext()\n          });\n        }\n      }\n    );\n  });\n}\n\nexport async function setGithubToken(token: string) {\n  return new Promise(resolve => {\n    chrome.storage.sync.set({ github_token: token }, function() {\n      resolve();\n    });\n  });\n}\n\nexport async function setGithubUserId(userId: string, avatarUrl: string) {\n  return new Promise(resolve => {\n    chrome.storage.sync.set(\n      { github_id: userId, github_avatar: avatarUrl },\n      function() {\n        resolve();\n      }\n    );\n  });\n}\n","export const GITHUB_CLIENT_ID = \"9b9e17e168e82438cfb6\";\nexport const API_ROOT_URL =\n  \"https://us-central1-git-meme-prod.cloudfunctions.net/api\";\n\n// DO NOT CHECK IN\n// function getFakeUrl() {\n//   console.error(\"Do not check this in\");\n//   return \"http://localhost:5000/git-meme-prod/us-central1/api\";\n// }\n// export const API_ROOT_URL = getFakeUrl();\n","//list-group\nimport React, { useState } from \"react\";\nimport { TopTokenItem } from \"../types\";\nimport \"../style/bootstrap.min.css\";\nimport copyToClipboard from \"../util/copyToClipboard\";\nimport formatNumber from \"format-number\";\nimport \"./ListWithBadges.css\";\nimport \"./token.css\";\n\ninterface Props {\n  emptyMessage?: React.ReactNode;\n  label: string;\n  items: Array<TopTokenItem>;\n}\n\nconst commaFormat = formatNumber({});\n\nexport default function ListWithBadges(props: Props) {\n  const [copiedIdx, setCopiedIdx] = useState(-1);\n  return (\n    <div className=\"ListWithBadges\">\n      <div className=\"listHeader\">\n        <span className=\"listLabel\">{props.label}</span>\n        {props.items.length > 0 ? (\n          <span className=\"timesUsed\">Times used</span>\n        ) : null}\n      </div>\n      {props.items.length > 0\n        ? renderList(props, copiedIdx, setCopiedIdx)\n        : renderEmpty(props)}\n    </div>\n  );\n}\n\nfunction renderList(\n  props: Props,\n  copiedIdx: number,\n  setCopiedIdx: Function\n): React.ReactNode {\n  function selectInputContents(evt: any) {\n    const node = evt.target as HTMLInputElement;\n    const nodeIdx = parseInt(node.getAttribute(\"data-idx\") || \"-1\", 0);\n    const text = props.items[nodeIdx].token;\n    copyToClipboard(`/${text}`);\n    setCopiedIdx(nodeIdx);\n\n    evt.preventDefault();\n  }\n  return (\n    <ul className=\"list-group\">\n      {props.items.map((tokenItem: TopTokenItem, idx: number) => {\n        return (\n          <li className=\"list-group-item d-flex align-items-left\" key={idx}>\n            <span className=\"idx\">{idx + 1}.</span>\n            <span\n              className=\"token\"\n              data-idx={idx}\n              onClick={selectInputContents}\n            >\n              /{tokenItem.token}\n            </span>\n            {copiedIdx === idx ? (\n              <span className=\"copiedText\">Copied!</span>\n            ) : null}\n            <span className=\"count\">{commaFormat(tokenItem.count)}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction renderEmpty(props: Props) {\n  return (\n    <div className=\"emptyList\">\n      {props.emptyMessage || (\n        <span>\n          <strong>{props.label}</strong>: No memes found, try choosing from\n          another list!\n        </span>\n      )}\n    </div>\n  );\n}\n","// @flow\n\nexport default function copyToClipboard(text: string): boolean {\n  const docElem = document.documentElement;\n  if (!docElem || !document.body) {\n    return false;\n  }\n  const isRTL = docElem.getAttribute(\"dir\") === \"rtl\";\n  const textarea = document.createElement(\"textarea\");\n  function s(prop: string, value: string) {\n    textarea.style.setProperty(prop, value);\n  }\n  s(\"fontSize\", \"12pt\");\n  // Reset box model\n  s(\"border\", \"0\");\n  s(\"padding\", \"0\");\n  s(\"margin\", \"0\");\n  s(\"position\", \"absolute\");\n  s(isRTL ? \"right\" : \"left\", \"-9999px\");\n\n  let yPosition = window.pageYOffset || docElem.scrollTop;\n  s(\"top\", `${yPosition}px`);\n\n  textarea.setAttribute(\"readonly\", \"\");\n  textarea.value = text;\n  if (!document.body) {\n    return false;\n  }\n  document.body.appendChild(textarea);\n  textarea.focus();\n  textarea.selectionStart = 0;\n  textarea.selectionEnd = text.length;\n\n  let succeeded = false;\n\n  try {\n    succeeded = document.execCommand(\"copy\");\n  } catch (err) {\n    succeeded = false;\n  }\n  if (textarea.parentNode) {\n    textarea.parentNode.removeChild(textarea);\n  }\n  return succeeded;\n}\n","declare const chrome: any;\n\nlet defaultOptions = { debug: false };\n\ninterface Props {\n  cd?: string;\n  dp?: string;\n  ec?: string;\n  el?: string;\n  ea?: string;\n  ev?: any;\n  t?: string;\n}\n\nclass Serializable {\n  properties: Props;\n\n  constructor(props: Props) {\n    this.properties = props || {};\n  }\n\n  toObject() {\n    return this.properties;\n  }\n\n  toString() {\n    return JSON.stringify(this.toObject());\n  }\n\n  toJSON() {\n    return JSON.stringify(this.properties);\n  }\n\n  toQueryString() {\n    const str = [];\n    const obj = this.toObject() as { [key: string]: any };\n    for (const p in obj) {\n      if (obj.hasOwnProperty(p) && obj[p]) {\n        str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n      }\n    }\n    return str.join(\"&\");\n  }\n}\n\nclass Hit extends Serializable {\n  sent: boolean;\n\n  constructor(props: Props) {\n    super(props);\n    this.sent = false;\n  }\n}\n\nclass PageHit extends Hit {\n  constructor(screenName: string) {\n    super({ dp: screenName, t: \"pageview\" });\n  }\n}\n\nclass ScreenHit extends Hit {\n  constructor(screenName: string) {\n    super({ cd: screenName, t: \"screenview\" });\n  }\n}\n\nclass AnalyticsEvent extends Hit {\n  constructor(\n    category: string,\n    action: string,\n    label?: string,\n    value?: string | number\n  ) {\n    super({ ec: category, ea: action, el: label, ev: value, t: \"event\" });\n  }\n}\n\nclass Analytics {\n  customDimensions: Array<any>;\n  propertyId: string;\n  options: any;\n  userAgent: string;\n  parameters: any;\n\n  waitOnPromise: Promise<any>;\n  clientId: string;\n\n  constructor(\n    propertyId: string,\n    additionalParameters = {},\n    options = defaultOptions\n  ) {\n    this.customDimensions = [];\n    this.propertyId = propertyId;\n    this.options = options;\n    this.clientId = \"\";\n\n    this.userAgent = window.navigator.userAgent;\n\n    this.parameters = {\n      ...additionalParameters\n    };\n\n    const storageKey = \"analytics_id\";\n\n    // Get the client ID from local storage\n    this.waitOnPromise = new Promise((resolve, _reject) => {\n      chrome.storage.local.get(\n        [storageKey],\n        (result: { [key: string]: string }) => {\n          const clientId = result[storageKey];\n          if (clientId) {\n            this.clientId = clientId;\n          } else {\n            this.clientId = genClientID();\n            const obj = {} as { [key: string]: string };\n            obj[storageKey] = this.clientId;\n\n            chrome.storage.local.set(obj);\n          }\n          resolve();\n        }\n      );\n    });\n  }\n\n  hit(hit: Hit) {\n    // send only after the user agent is saved\n    return this.send(hit);\n  }\n\n  event(event: AnalyticsEvent) {\n    // send only after the user agent is saved\n    return this.send(event);\n  }\n\n  addParameter(name: string, value: string) {\n    this.parameters[name] = value;\n  }\n\n  addCustomDimension(index: number, value: string) {\n    this.customDimensions[index] = value;\n  }\n\n  removeCustomDimension(index: number) {\n    delete this.customDimensions[index];\n  }\n\n  send(hit: Hit) {\n    /* format: https://www.google-analytics.com/collect? +\n     * &tid= GA property ID (required)\n     * &v= GA protocol version (always 1) (required)\n     * &t= hit type (pageview / screenview)\n     * &dp= page name (if hit type is pageview)\n     * &cd= screen name (if hit type is screenview)\n     * &cid= anonymous client ID (optional if uid is given)\n     * &uid= user id (optional if cid is given)\n     * &ua= user agent override\n     * &an= app name (required for any of the other app parameters to work)\n     * &aid= app id\n     * &av= app version\n     * &sr= screen resolution\n     * &cd{n}= custom dimensions\n     * &z= cache buster (prevent browsers from caching GET requests -- should always be last)\n     */\n    return this.waitOnPromise.then(() => {\n      const customDimensions = this.customDimensions\n        .map((value, index) => `cd${index}=${value}`)\n        .join(\"&\");\n\n      const params = new Serializable(this.parameters).toQueryString();\n\n      const url = `https://www.google-analytics.com/collect?tid=${\n        this.propertyId\n      }&v=1&cid=${\n        this.clientId\n      }&${hit.toQueryString()}&${params}&${customDimensions}&z=${Math.round(\n        Math.random() * 1e8\n      )}`;\n\n      let options = {\n        method: \"get\",\n        headers: {\n          \"User-Agent\": this.userAgent\n        }\n      };\n\n      return fetch(url, options);\n    });\n  }\n}\n\nfunction genClientID() {\n  return Date.now() + \"_\" + Math.floor(Math.random() * 1000);\n}\n\nconst UaString = \"UA-11032269-7\";\n\nconst analytics = new Analytics(UaString);\n\nfunction newEvent(\n  category: string,\n  action: string,\n  label?: string,\n  value?: string | number\n) {\n  return new AnalyticsEvent(category, action, label, value);\n}\n\nexport function sendEvent(\n  category: string,\n  action: string,\n  label?: string,\n  value?: string | number\n) {\n  const evt = newEvent(category, action, label, value);\n  return analytics.event(evt);\n}\n\nexport function sendPageHit(pageName: string) {\n  const hit = new PageHit(pageName);\n  return analytics.hit(hit);\n}\n","import React from \"react\";\nimport \"../App.css\";\nimport getToken from \"../shared/auth/getToken\";\nimport { GithubInfo } from \"../shared/auth/githubInfo\";\n\nimport \"./Login.css\";\nimport { sendEvent } from \"../shared/analytics\";\n\ndeclare const chrome: any;\n\ninterface Props {\n  onAuth: (authInfo: GithubInfo) => void;\n}\n\nconst Login = (props: Props) => {\n  function _logIn() {\n    console.log(\"Logging in\");\n    try {\n      if (!chrome || !chrome.identity) {\n        console.log(\"Not in an extension\");\n        return;\n      }\n      sendEvent(\"action\", \"login\", \"begin\", \"popup\");\n      getToken(true, async (err: any, info: GithubInfo) => {\n        console.log(\"getToken complete\", \"Error is \", err, \"info is \", info);\n        if (err) {\n          sendEvent(\"action\", \"login\", \"fail\", \"popup\");\n          console.error(err);\n        } else {\n          console.log(\"got token info \", info);\n          sendEvent(\"action\", \"login\", \"success\", \"popup\");\n          props.onAuth(info);\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  return (\n    <div className=\"Login\">\n      <button onClick={_logIn}>Log in with Github</button>\n    </div>\n  );\n};\n\nexport default Login;\n","import { GITHUB_CLIENT_ID } from \"../consts\";\nimport { getGithubInfo, setGithubUserId, setGithubToken } from \"./githubInfo\";\n\ndeclare const chrome: any;\n\nexport default function getToken(interactive: boolean, callback: Function) {\n  console.log(\"getToken\");\n\n  const localRedirectUri = (chrome as any).identity.getRedirectURL(\n    \"provider_cb\"\n  );\n\n  const redirectUri =\n    \"https://us-central1-git-meme-prod.cloudfunctions.net/oauth/\" +\n    chrome.runtime.id;\n  const redirectRe = new RegExp(localRedirectUri + \"[#?](.*)\");\n\n  const options = {\n    interactive: interactive,\n    url:\n      \"https://github.com/login/oauth/authorize\" +\n      \"?client_id=\" +\n      GITHUB_CLIENT_ID +\n      \"&redirect_uri=\" +\n      encodeURIComponent(redirectUri)\n  };\n\n  getGithubInfo().then(async info => {\n    console.log(\"got github info \", info);\n    if (!info.token || !info.id || !info.avatar) {\n      console.log(\"calling launchWebAuthFlow with options\", options);\n      chrome.identity.launchWebAuthFlow(options, function(\n        redirectUri2: string\n      ) {\n        console.log(\"launchWebAuthFlow callback with redirect \", redirectUri2);\n        if (chrome.runtime.lastError) {\n          console.error(\"launchWebAuthFlow error\", chrome.runtime.lastError);\n          callback(new Error(chrome.runtime.lastError));\n          return;\n        }\n\n        // Upon success the response is appended to redirectUri, e.g.\n        // https://{app_id}.chromiumapp.org/provider_cb#access_token={value}\n        //     &refresh_token={value}\n        const matches = redirectUri2.match(redirectRe);\n\n        console.log(\"matches = \", matches);\n        if (matches && matches.length > 1) {\n          console.log(\"calling handleProviderResponse\");\n          handleProviderResponse(parseRedirectFragment(matches[1]));\n        } else {\n          callback(\"Invalid redirect URI\");\n        }\n      });\n    }\n  });\n\n  function parseRedirectFragment(fragment: string) {\n    const pairs = fragment.split(/&/);\n    const values: { [key: string]: string } = {};\n\n    pairs.forEach(function(pair) {\n      const nameVal = pair.split(/=/);\n      values[nameVal[0]] = nameVal[1];\n    });\n\n    console.log(\"parseRedirectFragment got values\", values);\n\n    return values;\n  }\n\n  async function handleProviderResponse(values: { [key: string]: string }) {\n    if (values.hasOwnProperty(\"access_token\")) {\n      await setAccessToken(values.access_token, values.user_id, values.avatar);\n      // If response does not have an access_token, it might have the code,\n      // which can be used in exchange for token.\n    } else {\n      callback(new Error(\"Neither access_token nor code available.\"));\n    }\n  }\n\n  async function setAccessToken(token: string, userId: string, avatar: string) {\n    // access_token = token;\n\n    await setGithubToken(token);\n    await setGithubUserId(userId, avatar);\n    callback(null, { token, id: userId, avatar });\n  }\n}\n","import React, { useState, useEffect, MouseEvent } from \"react\";\nimport { API_ROOT_URL } from \"../shared/consts\";\nimport { TopTokenItem } from \"../types\";\nimport ListWithBadges from \"./ListWithBadges\";\nimport { GithubInfo } from \"../shared/auth/githubInfo\";\nimport \"./TopTokensList.css\";\nimport Login from \"./Login\";\nimport createAuthHeader from \"../shared/auth/createAuthHeader\";\n\ndeclare const chrome: any;\n\ninterface Props {\n  userInfo: GithubInfo;\n  onAuth: (authInfo: GithubInfo) => void;\n}\n\ntype TokenList = {\n  context: Array<TopTokenItem>;\n  user: Array<TopTokenItem>;\n  global: Array<TopTokenItem>;\n};\n\nexport default function TopTokensList(props: Props) {\n  const [tokenList, setTokenList] = useState({\n    context: [],\n    user: [],\n    global: []\n  } as TokenList);\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [pageContext, setPageContext] = useState(\"\");\n\n  useEffect(() => {\n    const authHeaders =\n      props.userInfo.token && props.userInfo.id !== null\n        ? createAuthHeader(props.userInfo.id, props.userInfo.token)\n        : {};\n\n    chrome.tabs.query(\n      { active: true, currentWindow: true },\n      (tabs: Array<any>) => {\n        // There will be only one in this array\n        const currentTab = tabs[0];\n\n        let tabContext = \"\";\n        if (currentTab) {\n          let url: string = currentTab.url;\n\n          if (!url) {\n            // When running in an iframe, the url in the 'currentTab'\n            // is undefined for some reason. In this case, we will have\n            // passed through a single parameter, 'currentUrl' with the\n            // window's url, so use that instead\n            if (window.location.search.indexOf(\"currentUrl=\") > -1) {\n              url = window.location.search.split(\"=\")[1];\n            }\n          }\n\n          const urlParts = url.split(\"/\");\n          if (\n            urlParts[2] === \"github.com\" ||\n            urlParts[2].endsWith(\".github.com\")\n          ) {\n            tabContext = urlParts[3] || \"\";\n            setPageContext(tabContext);\n          }\n        }\n\n        fetch(`${API_ROOT_URL}/top_tokens?context=${tabContext}`, {\n          headers: authHeaders\n        })\n          .then(resp => {\n            if (resp.ok) {\n              return resp.json();\n            }\n            throw new Error(\"Failed to fetch top tokens\");\n          })\n          .then((results: TokenList) => {\n            setTokenList(results);\n            setIsLoading(false);\n          })\n          .catch(err => {\n            setError(err.message);\n            setIsLoading(false);\n          });\n      }\n    );\n  }, [props.userInfo.id, props.userInfo.context]);\n\n  if (isLoading) {\n    return null;\n  }\n\n  return (\n    <div className=\"TopTokensList\">\n      {!error ? (\n        <>\n          {tokenList.context && tokenList.context.length > 0 ? (\n            <ListWithBadges\n              label={`In ${pageContext}`}\n              items={tokenList.context}\n            />\n          ) : null}\n          <ListWithBadges label=\"Trending\" items={tokenList.global} />\n          <ListWithBadges\n            label=\"Your Memes\"\n            items={props.userInfo.token ? tokenList.user : []}\n            emptyMessage={\n              <div className=\"emptyMsg\">\n                <div>\n                  Log in with your Github account to see the most popular memes\n                  used by you and your team\n                </div>\n                <div>\n                  <Login onAuth={props.onAuth} />\n                </div>\n              </div>\n            }\n          />\n        </>\n      ) : (\n        <div>Error</div>\n      )}\n    </div>\n  );\n}\n","export default function createAuthHeader(userId: string, token: string) {\n  return {\n    Authorization: `Bearer ${userId}___${token}`,\n    \"Content-Type\": \"application/json\"\n  };\n}\n","import * as React from \"react\";\n\nimport \"./Help.css\";\nimport \"./token.css\";\n\nexport default function Help() {\n  return (\n    <div className=\"Help\">\n      <strong>\n        <a href=\"https://gitme.me\" target=\"_blank\">\n          GitMeme\n        </a>\n      </strong>{\" \"}\n      brings lots of fun to Github by making it easy to include Gifs in your\n      comments. In any text box, just type a forward slash and some text to\n      insert a meme, e.g <span className=\"token\">/shipit</span>\n    </div>\n  );\n}\n","import * as React from \"react\";\n\nexport default function Feedback() {\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"16px\" }}>\n      <a\n        href=\"https://spectrum.chat/gitmeme\"\n        target=\"_blanks\"\n        style={{ color: \"#0066d6\", fontSize: \"14px\", letterSpacing: \"-0.15px\" }}\n      >\n        Gift Feedback\n      </a>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { getGithubInfo, GithubInfo } from \"./shared/auth/githubInfo\";\nimport TopTokensList from \"./components/TopTokensList\";\nimport Help from \"./components/Help\";\nimport { sendPageHit } from \"./shared/analytics\";\nimport Feedback from \"./components/Feedback\";\n\nconst App = () => {\n  const [auth, setAuth] = useState({\n    token: \"\",\n    id: \"\",\n    avatar: \"\"\n  } as GithubInfo);\n  const [authComplete, setAuthComplete] = useState(false);\n\n  console.log(\"App has auth \", auth);\n\n  useEffect(() => {\n    // Run on mount\n    getGithubInfo().then(authInfo => {\n      setAuth(authInfo);\n      setAuthComplete(true);\n    });\n    sendPageHit(\"popup\");\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Help />\n      {authComplete ? (\n        <TopTokensList\n          userInfo={auth}\n          onAuth={(authInfo: GithubInfo) => {\n            console.log(\"Using authInfo \", authInfo);\n            setAuth(authInfo);\n          }}\n        />\n      ) : null}\n      <Feedback />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}